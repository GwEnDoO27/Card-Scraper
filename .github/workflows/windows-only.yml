name: Windows Build Only

on:
  workflow_dispatch:  # Manuel trigger
  push:
    branches: [ main ]
    paths-ignore:
      - '*.md'
      - 'docs/**'

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Go environment
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true

    - name: Setup Node.js environment
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install Wails CLI
      run: |
        go install github.com/wailsapp/wails/v2/cmd/wails@latest
        wails version

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci --production=false

    - name: Verify Wails project
      run: wails doctor

    - name: Build Windows executable
      run: |
        wails build -clean -platform windows/amd64 -ldflags "-s -w"
        dir build\bin

    - name: Test executable (basic check)
      run: |
        if (Test-Path "build\bin\card-scraper.exe") {
          Write-Host "‚úÖ Executable created successfully"
          Get-ChildItem "build\bin\card-scraper.exe" | Select-Object Name, Length, LastWriteTime
        } else {
          Write-Host "‚ùå Executable not found"
          exit 1
        }

    - name: Create portable package
      run: |
        $version = Get-Date -Format "yyyy-MM-dd-HHmm"
        $packageName = "card-scraper-windows-$version"
        
        New-Item -ItemType Directory -Path "package\$packageName" -Force
        Copy-Item "build\bin\card-scraper.exe" "package\$packageName\"
        
        # Add README for users
        @"
        Card Scraper - Windows Portable
        ==============================
        
        To run the application:
        1. Double-click card-scraper.exe
        2. The application will start with a GUI interface
        
        Requirements:
        - Windows 10/11 (64-bit)
        - Internet connection for scraping
        
        Build date: $(Get-Date)
        "@ | Out-File -FilePath "package\$packageName\README.txt" -Encoding UTF8
        
        # Create ZIP archive
        Compress-Archive -Path "package\$packageName\*" -DestinationPath "card-scraper-windows-portable.zip" -Force
        
        Write-Host "Package created: card-scraper-windows-portable.zip"

    - name: Upload Windows executable
      uses: actions/upload-artifact@v4
      with:
        name: card-scraper-windows-executable
        path: build/bin/card-scraper.exe
        retention-days: 7

    - name: Upload portable package
      uses: actions/upload-artifact@v4
      with:
        name: card-scraper-windows-portable
        path: card-scraper-windows-portable.zip
        retention-days: 30

    - name: Build summary
      run: |
        Write-Host "üéâ Build completed successfully!"
        Write-Host "üì¶ Artifacts created:"
        Write-Host "   - Windows executable: card-scraper.exe"
        Write-Host "   - Portable package: card-scraper-windows-portable.zip"
        Write-Host ""
        Write-Host "üíæ File sizes:"
        if (Test-Path "build\bin\card-scraper.exe") {
          $size = (Get-Item "build\bin\card-scraper.exe").Length / 1MB
          Write-Host "   - Executable: $([math]::Round($size, 2)) MB"
        }
        if (Test-Path "card-scraper-windows-portable.zip") {
          $size = (Get-Item "card-scraper-windows-portable.zip").Length / 1MB
          Write-Host "   - Package: $([math]::Round($size, 2)) MB"
        }